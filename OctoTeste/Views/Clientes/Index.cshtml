
@model PaginatedList<OctoTeste.Models.Cliente>
@{
    ViewData["Title"] = "Index";
}

<h1>Clientes</h1>

<p>
    <a asp-action="Create">Inserir novo Cliente</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Procurar por nome: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Procurar" class="btn btn-link" /> |  <imput type="back" value="Voltar" class="btn btn-link"><a asp-action="Index">Voltar</a></imput>
        </p>
       
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nome</a>
            </th>
            <th>
                <a asp-action="Index">CPF</a>
            </th>
            <th>
                <a asp-action="Index">CNPJ</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Data de Nascimento</a>
            </th>
            <th>
                <a asp-action="Index">TELEFONE</a>
            </th>
            <th>
                <a asp-action="Index">Tipo de Telefone</a>
            <th>
                <a asp-action="Index">CEP</a>
            </th>
            <th>
                <a asp-action="Index">Endereço</a>
            </th>
            <th>
                <a asp-action="Index">Tipo de Cobrança</a>
            </th>
            <th>
                <a asp-action="Index">Número</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cpf)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cnpj)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.dataNascimento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tipoTelefone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cep)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tipoEndereco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Numero)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-info @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-info @nextDisabled">
    Próximo
</a>
